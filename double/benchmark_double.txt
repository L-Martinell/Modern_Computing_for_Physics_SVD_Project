This file contains the results of the benchmarking of the SVD on double precision floating point numbers.

###################################### CPU ######################################
Matrix size: 256 x 128, Frobenius norm: 0.0510974511, time elapsed (SVD CPU double, custom): 6.1574120000 s
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD CPU double, LAPACK): 1.3378190000 s
Matrix size: 512 x 256, Frobenius norm: 0.2642406712, time elapsed (SVD CPU double, custom): 44.4610570000 s
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD CPU double, LAPACK): 4.2896970000 s
Matrix size: 1024 x 512, Frobenius norm: 0.5019449120, time elapsed (SVD CPU double, custom): 367.0768300000 s
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD CPU double, LAPACK): 13.2027470000 s
Matrix size: 2048 x 1024, Frobenius norm: 0.0000000000, time elapsed (SVD CPU double, LAPACK): 132.0968810000 s





###################################### GPU ######################################
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.0497368965 s MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (8, 8); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.0501341743 s MatrixTranspositionKernel (matrix A): gridSize = (8, 16), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (16, 16), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (8, 8), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (8, 16), blockSize = (16, 16); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.0495062408 s MatrixTranspositionKernel (matrix A): gridSize = (4, 8), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (8, 8), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (4, 4), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (4, 8), blockSize = (32, 32); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048

Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.0879121246 s MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (8, 8); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.0903373108 s MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (16, 16); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.0906015701 s MatrixTranspositionKernel (matrix A): gridSize = (8, 16), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (16, 16), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (8, 8), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (8, 16), blockSize = (32, 32); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096

Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.2222825928 s MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (8, 8); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.2113353577 s MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (16, 16); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.2115192261 s MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (32, 32); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192

Matrix size: 2048 x 1024, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.8695431519 s MatrixTranspositionKernel (matrix A): gridSize = (128, 256), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (256, 256), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (128, 128), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (128, 256), blockSize = (8, 8); MatrixReductionKernel: gridSize = 4096, blockSize = 512, shared Memory size = 4096
Matrix size: 2048 x 1024, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.8765708008 s MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (16, 16); MatrixReductionKernel: gridSize = 4096, blockSize = 512, shared Memory size = 4096
Matrix size: 2048 x 1024, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 0.8688762207 s MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (16, 16); MatrixReductionKernel: gridSize = 4096, blockSize = 512, shared Memory size = 4096

Matrix size: 4096 x 2048, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 4.6751152344 s MatrixTranspositionKernel (matrix A): gridSize = (256, 512), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (512, 512), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (256, 256), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (256, 512), blockSize = (8, 8); MatrixReductionKernel: gridSize = 8192, blockSize = 1024, shared Memory size = 8192
Matrix size: 4096 x 2048, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 4.5612817383 s MatrixTranspositionKernel (matrix A): gridSize = (128, 256), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (256, 256), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (128, 128), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (128, 256), blockSize = (16, 16); MatrixReductionKernel: gridSize = 8192, blockSize = 1024, shared Memory size = 8192
Matrix size: 4096 x 2048, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float): 4.5423725586 s MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (32, 32); MatrixReductionKernel: gridSize = 8192, blockSize = 1024, shared Memory size = 8192





################################# GPU, sharedMem #################################
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0497878723 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (8, 8); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0510533752 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (8, 16), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (16, 16); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0499942398 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (4, 8), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (32, 32); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048

Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0491439667 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (16, 16), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (8, 8), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (8, 16), blockSize = (8, 8); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, ime elapsed (SVD GPU float, sharedMem): 0.0496365433 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (8, 16), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (16, 16), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (8, 8), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (8, 16), blockSize = (16, 16); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0503184967 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (4, 8), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (16, 16), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (8, 8), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (8, 16), blockSize = (32, 32); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048

Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0794776993 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (8, 8), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (4, 4), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (4, 8), blockSize = (8, 8); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0487453117 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (8, 16), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (8, 8), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (4, 4), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (4, 8), blockSize = (16, 16); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048
Matrix size: 256 x 128, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0496685104 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (4, 8), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (8, 8), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (4, 4), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (4, 8), blockSize = (32, 32); MatrixReductionKernel: gridSize = 128, blockSize = 256, shared Memory size = 2048


Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0895186539 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (8, 8); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0879155807 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (16, 16); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0879569244 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (8, 16), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (32, 32); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096

Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0899964828 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (8, 8); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0923371506 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (16, 16); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0897073288 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (8, 16), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (32, 32); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096

Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0885848618 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (16, 16), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (8, 8), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (8, 16), blockSize = (8, 8); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0901497955 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (16, 16), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (8, 8), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (8, 16), blockSize = (16, 16); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096
Matrix size: 512 x 256, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.0882340775 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (8, 16), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (16, 16), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (8, 8), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (8, 16), blockSize = (32, 32); MatrixReductionKernel: gridSize = 256, blockSize = 512, shared Memory size = 4096


Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2231735992 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (8, 8); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2126085510 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (16, 16); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2122352905 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (32, 32); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192

Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2122262421 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (8, 8); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2221557770 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (16, 16); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2247679291 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (32, 32); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192

Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2243415375 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (8, 8); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2173872070 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (16, 16); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192
Matrix size: 1024 x 512, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.2131624603 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (16, 32), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (32, 32), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (16, 16), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (16, 32), blockSize = (32, 32); MatrixReductionKernel: gridSize = 512, blockSize = 1024, shared Memory size = 8192


Matrix size: 2048 x 1024, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.9051560059 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (128, 256), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (256, 256), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (128, 128), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (128, 256), blockSize = (8, 8); MatrixReductionKernel: gridSize = 4096, blockSize = 512, shared Memory size = 4096

Matrix size: 2048 x 1024, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.8573547363 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (16, 16); MatrixReductionKernel: gridSize = 4096, blockSize = 512, shared Memory size = 4096

Matrix size: 2048 x 1024, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 0.9161353760 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (32, 64), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (64, 64), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (32, 32), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (32, 64), blockSize = (32, 32); MatrixReductionKernel: gridSize = 4096, blockSize = 512, shared Memory size = 4096


Matrix size: 4096 x 2048, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 4.6134985352 s; Tile size: 8; MatrixTranspositionKernel (matrix A): gridSize = (256, 512), blockSize = (8, 8); MatrixTranspositionKernel (matrix U): gridSize = (512, 512), blockSize = (8, 8); MatrixTranspositionKernel (matrix V): gridSize = (256, 256), blockSize = (8, 8); MatrixMultiplicationKernel: gridSize = (256, 512), blockSize = (8, 8); MatrixReductionKernel: gridSize = 8192, blockSize = 1024, shared Memory size = 8192

Matrix size: 4096 x 2048, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 4.5306108398 s; Tile size: 16; MatrixTranspositionKernel (matrix A): gridSize = (128, 256), blockSize = (16, 16); MatrixTranspositionKernel (matrix U): gridSize = (256, 256), blockSize = (16, 16); MatrixTranspositionKernel (matrix V): gridSize = (128, 128), blockSize = (16, 16); MatrixMultiplicationKernel: gridSize = (128, 256), blockSize = (16, 16); MatrixReductionKernel: gridSize = 8192, blockSize = 1024, shared Memory size = 8192

Matrix size: 4096 x 2048, Frobenius norm: 0.0000000000, time elapsed (SVD GPU float, sharedMem): 4.5335268555 s; Tile size: 32; MatrixTranspositionKernel (matrix A): gridSize = (64, 128), blockSize = (32, 32); MatrixTranspositionKernel (matrix U): gridSize = (128, 128), blockSize = (32, 32); MatrixTranspositionKernel (matrix V): gridSize = (64, 64), blockSize = (32, 32); MatrixMultiplicationKernel: gridSize = (64, 128), blockSize = (32, 32); MatrixReductionKernel: gridSize = 8192, blockSize = 1024, shared Memory size = 8192
